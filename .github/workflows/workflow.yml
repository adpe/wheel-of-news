name: Wheel of News application workflow
on:
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/workflow.yml'
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - '.github/workflows/workflow.yml'

jobs:
  project-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up the Maven dependencies caching
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Maven dependencies
        run: mvn install

      - name: Run tests
        run: mvn --batch-mode --update-snapshots verify

  docker-build:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - project-build
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permissions to Maven Wrapper
        run: chmod +x mvnw

      - name: Build with Maven
        run: ./mvnw clean package -Pproduction -e

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: adpe/wheel-of-news:latest

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - docker-build
    steps:
      - uses: actions/checkout@v4

      - name: Add Server key
        run: |
          touch key.txt && echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.txt
          chmod 600 key.txt
      - name: Deploy the application
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_JPA_SHOW_SQL: ${{ secrets.SPRING_JPA_SHOW_SQL }}
          LOGGING_LEVEL_ORG_HIBERNATE_SQL: ${{ secrets.LOGGING_LEVEL_ORG_HIBERNATE_SQL }}
          LOGGING_LEVEL_ORG_HIBERNATE_ORM_JDBC_BIND: ${{ secrets.LOGGING_LEVEL_ORG_HIBERNATE_ORM_JDBC_BIND }}
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
          NEWS_FETCH_CRON: ${{ secrets.NEWS_FETCH_CRON }}
        run: |
          set -e
          chmod +x deploy.sh
          ./deploy.sh
